
# Output directory
ifeq ($(OUTPUTDIR),)
  OUTPUTDIR=./tmp
endif

include discover-flags.mk

# set default test, if not set
#
# TEST_NAME = TEST_NO_MANAGER TEST_EPOCH_MANAGER TEST_PUB_SCAN_MANAGER TEST_GC_MANAGER
#             TEST_STD_LOCKGUARD TEST_UAB_LOCKGUARD TEST_UAB_ELIDEGUARD
#

ifeq ($(TEST_NAME),)
  TEST_NAME=TEST_EPOCH_MANAGER
endif

# libraries

SOURCE=queueTester.cc
TARGET=$(SOURCE:.cc=.bin)

EXTRAFLAGS=-D$(TEST_NAME)=1
INCLUDES=$(BLAZE_HOME)/include
LIBS=

#~ CXXFLAGS=-std=c++11 -Wall -Wextra -pedantic -ggdb -Og $(INSTRSET) -DNDEBUG=1 $(THREADFLAG) $(TXFLAG)
CXXFLAGS=-std=c++11 -Wall -Wextra -pedantic -O2 $(INSTRSET) -DNDEBUG=1 $(THREADFLAG) $(TXFLAG)

ifeq ($(TEST_NAME),TEST_GC_MANAGER)
  ifneq ($(GC_HOME),)
    INCLUDES+= -I$(GC_HOME)/include
    LIBS+= -L$(GC_HOME)/lib
  endif

  LIBS+= -lgc # disable when compiling w/o garbage collector=
  EXTRAFLAGS+= -DWITH_GC=1
endif

# LIBS+=-latomic # needed on some architectures

.PHONY: test clean

test: $(OUTPUTDIR)/$(TARGET)

$(OUTPUTDIR)/$(TARGET): $(SOURCE) $(BLAZE_HOME)/include/queue.hpp Makefile.queue
	$(CXX) $(CXXFLAGS) $(EXTRAFLAGS) -I$(INCLUDES) $< $(LIBS) -o $@

clean:
	rm -f $(OUTPUTDIR)/*.o $(OUTPUTDIR)/*.bin $(TARGET)
